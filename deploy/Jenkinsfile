
pipeline {
    agent any
    stages {
        stage('Init') {
            steps {
                script{
                    def dockerPath = tool 'docker' //全局配置里的docker
                    env.PATH = "${dockerPath}/bin:${env.PATH}" //添加了系统环境变量上
                }
            }
        }
        stage('Build') {
            steps {
                script{
                    sh "docker build --rm -t ${params.name}:${params.version}  -f deploy/Dockerfile ."
                }
            }
        }
        stage('Deploy:Docker') {
            steps {
                script{
                    sh "docker login -u djlxs -p djl.l951753" 
                    sh "docker tag ${params.name}:${params.version} djlxs/${params.name}:${params.version}" 
                    sh "docker push djlxs/${params.name}:${params.version}"
                }
            }
        }
        stage('YAML') {
            steps {
                script{
                    sh "sed -i '' 's/<VERSION>/${params.version}/' deploy/k8s/deployment.yaml"
                    sh "sed -i '' 's/<NAME>/${params.name}/' deploy/k8s/deployment.yaml"
                    
                    sh "sed -i '' 's/<VERSION>/${params.version}/' deploy/k8s/service.yaml"
                    sh "sed -i '' 's/<NAME>/${params.name}/' deploy/k8s/service.yaml"

                    sh "sed -i '' 's/<NAME>/${params.name}/' deploy/k8s/ingress.yaml"
                    sh "sed -i '' 's/<VERSION>/${params.version}/' deploy/k8s/ingress.yaml"

                    sh "sed -i '' 's/<VERSION>/${params.name}/' deploy/k8s/router.ingress.yaml"
                }
            }
        }
        stage('Deploy:k8s') {
            steps {
                script{
                    echo "-------deployment--------"
                    sh "cat deploy/k8s/deployment.yaml"
                    sh "kubectl apply -f deploy/k8s/deployment.yaml"
                    echo "-------service--------"
                    sh "cat deploy/k8s/service.yaml"
                    sh "kubectl apply -f deploy/k8s/service.yaml"
                    echo "-------ingress--------"
                    sh "cat deploy/k8s/ingress.yaml"
                    sh "kubectl apply -f deploy/k8s/ingress.yaml"
                    echo "-------ingress--------"
                    sh "kubectl apply -f deploy/k8s/ingress.yaml"
                    echo "-------router ingress--------"
                    sh "kubectl apply -f deploy/k8s/router.ingress.yaml"
                }
            }
        }
        stage('Generate:gray config') {
            steps {
                script{
                    echo "-------exec grayConfigGenerator.js--------"
                    sh "node grayConfigGenerator.js"
                    echo "------- add gray config info--------"
                    sh "kubectl annotate ingress ${params.name}.routing.ingress \                                            
                        nginx.ingress.kubernetes.io/configuration-snippet="$(cat gray.config.txt)" \
                        --overwrite"
                }
            }
        }
    }
}